// <auto-generated />
using BaoHiemYTe.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BaoHiemYTe.Migrations
{
    [DbContext(typeof(UserDbContext))]
    [Migration("20231126152838_Demo1")]
    partial class Demo1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BaoHiemYTe.Domain.Benh", b =>
                {
                    b.Property<int>("MaBenh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaBenh"));

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenBenh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaBenh");

                    b.ToTable("Benhs");
                });

            modelBuilder.Entity("BaoHiemYTe.Domain.ChinhSach", b =>
                {
                    b.Property<int>("MaCS")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaCS"));

                    b.Property<int>("BenhMaBenh")
                        .HasColumnType("int");

                    b.Property<int>("GoiBaoHiemMaGoiBH")
                        .HasColumnType("int");

                    b.Property<int>("MaGoiBH")
                        .HasColumnType("int");

                    b.HasKey("MaCS");

                    b.HasIndex("BenhMaBenh");

                    b.HasIndex("GoiBaoHiemMaGoiBH");

                    b.ToTable("ChinhSachs");
                });

            modelBuilder.Entity("BaoHiemYTe.Domain.GoiBaoHiem", b =>
                {
                    b.Property<int>("MaGoiBH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaGoiBH"));

                    b.Property<int>("Gia")
                        .HasColumnType("int");

                    b.Property<string>("TenGoiBH")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TiLeHoanTien")
                        .HasColumnType("int");

                    b.HasKey("MaGoiBH");

                    b.ToTable("GoiBaoHiems");
                });

            modelBuilder.Entity("BaoHiemYTe.Domain.KhachHang", b =>
                {
                    b.Property<int>("MaKH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaKH"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoDu")
                        .HasColumnType("int");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MaKH");

                    b.HasIndex("username");

                    b.ToTable("KhachHangs");
                });

            modelBuilder.Entity("BaoHiemYTe.Domain.User", b =>
                {
                    b.Property<string>("username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("FirstLogin")
                        .HasColumnType("bit");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BaoHiemYTe.Domain.ChinhSach", b =>
                {
                    b.HasOne("BaoHiemYTe.Domain.Benh", "Benh")
                        .WithMany()
                        .HasForeignKey("BenhMaBenh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BaoHiemYTe.Domain.GoiBaoHiem", "GoiBaoHiem")
                        .WithMany()
                        .HasForeignKey("GoiBaoHiemMaGoiBH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Benh");

                    b.Navigation("GoiBaoHiem");
                });

            modelBuilder.Entity("BaoHiemYTe.Domain.KhachHang", b =>
                {
                    b.HasOne("BaoHiemYTe.Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
